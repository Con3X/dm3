# Docker build process

We are building multiple images in this project - some of them are used only in the build process, some of them are published.

All images are generated from one Dockerfile. To specify which image to build, you need to pass the `--target` flag to the `docker build` command. The target is the name of the image you want to build.
Example:
```bash
docker build --progress=plain -f ./docker/Dockerfile --target build    --tag build .
docker build --progress=plain -f ./docker/Dockerfile --target base     --tag base .
```
These commands will build the `build` and `base` images, respectively. 

The `package` image takes an argument - the name of the package you want to build. Example:
```bash
docker build --progress=plain -f ./docker/Dockerfile --target package --tag dm3org/dm3-backend:latest --build-arg="PACKAGE=backend" .
```
This command will build the an image containing the `backend` package (from packages/backend).

The build process is layered: the `build` image is needed to create the `base` image, and both are needed to create the `package` image. The `package` image is the only one that is published.

It is possible to only execute the build command for the `package` image, and the `build` and `base` images will be built automatically. In subsequent package builds, the `build` and `base` images should automatically be reused from the cache. To make sure this happens, we manually build the `build` and `base` images before building the `package` image.
